//------------------------------------------------------------------------------
// <auto-generated>
//     Esse código foi gerado por uma ferramenta.
//
//     As alterações no arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TempoServico
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="celsiusToFahrenheitRequest", Namespace="http://learnwebservices.com/services/tempconverter")]
    public partial class celsiusToFahrenheitRequest : object
    {
        
        private double TemperatureInCelsiusField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double TemperatureInCelsius
        {
            get
            {
                return this.TemperatureInCelsiusField;
            }
            set
            {
                this.TemperatureInCelsiusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="celsiusToFahrenheitResponse", Namespace="http://learnwebservices.com/services/tempconverter")]
    public partial class celsiusToFahrenheitResponse : object
    {
        
        private double TemperatureInFahrenheitField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double TemperatureInFahrenheit
        {
            get
            {
                return this.TemperatureInFahrenheitField;
            }
            set
            {
                this.TemperatureInFahrenheitField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fahrenheitToCelsiusRequest", Namespace="http://learnwebservices.com/services/tempconverter")]
    public partial class fahrenheitToCelsiusRequest : object
    {
        
        private double TemperatureInFahrenheitField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double TemperatureInFahrenheit
        {
            get
            {
                return this.TemperatureInFahrenheitField;
            }
            set
            {
                this.TemperatureInFahrenheitField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fahrenheitToCelsiusResponse", Namespace="http://learnwebservices.com/services/tempconverter")]
    public partial class fahrenheitToCelsiusResponse : object
    {
        
        private double TemperatureInCelsiusField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double TemperatureInCelsius
        {
            get
            {
                return this.TemperatureInCelsiusField;
            }
            set
            {
                this.TemperatureInCelsiusField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://learnwebservices.com/services/tempconverter", ConfigurationName="TempoServico.TempConverterEndpoint")]
    public interface TempConverterEndpoint
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<TempoServico.CelsiusToFahrenheitResponse1> CelsiusToFahrenheitAsync(TempoServico.CelsiusToFahrenheit request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<TempoServico.FahrenheitToCelsiusResponse1> FahrenheitToCelsiusAsync(TempoServico.FahrenheitToCelsius request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CelsiusToFahrenheit
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://learnwebservices.com/services/tempconverter", Order=0)]
        public TempoServico.celsiusToFahrenheitRequest CelsiusToFahrenheitRequest;
        
        public CelsiusToFahrenheit()
        {
        }
        
        public CelsiusToFahrenheit(TempoServico.celsiusToFahrenheitRequest CelsiusToFahrenheitRequest)
        {
            this.CelsiusToFahrenheitRequest = CelsiusToFahrenheitRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CelsiusToFahrenheitResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://learnwebservices.com/services/tempconverter", Order=0)]
        public TempoServico.celsiusToFahrenheitResponse CelsiusToFahrenheitResponse;
        
        public CelsiusToFahrenheitResponse1()
        {
        }
        
        public CelsiusToFahrenheitResponse1(TempoServico.celsiusToFahrenheitResponse CelsiusToFahrenheitResponse)
        {
            this.CelsiusToFahrenheitResponse = CelsiusToFahrenheitResponse;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FahrenheitToCelsius
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://learnwebservices.com/services/tempconverter", Order=0)]
        public TempoServico.fahrenheitToCelsiusRequest FahrenheitToCelsiusRequest;
        
        public FahrenheitToCelsius()
        {
        }
        
        public FahrenheitToCelsius(TempoServico.fahrenheitToCelsiusRequest FahrenheitToCelsiusRequest)
        {
            this.FahrenheitToCelsiusRequest = FahrenheitToCelsiusRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FahrenheitToCelsiusResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://learnwebservices.com/services/tempconverter", Order=0)]
        public TempoServico.fahrenheitToCelsiusResponse FahrenheitToCelsiusResponse;
        
        public FahrenheitToCelsiusResponse1()
        {
        }
        
        public FahrenheitToCelsiusResponse1(TempoServico.fahrenheitToCelsiusResponse FahrenheitToCelsiusResponse)
        {
            this.FahrenheitToCelsiusResponse = FahrenheitToCelsiusResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface TempConverterEndpointChannel : TempoServico.TempConverterEndpoint, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class TempConverterEndpointClient : System.ServiceModel.ClientBase<TempoServico.TempConverterEndpoint>, TempoServico.TempConverterEndpoint
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar o ponto de extremidade de serviço.
        /// </summary>
        /// <param name="serviceEndpoint">O ponto de extremidade a ser configurado</param>
        /// <param name="clientCredentials">As credenciais do cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public TempConverterEndpointClient() : 
                base(TempConverterEndpointClient.GetDefaultBinding(), TempConverterEndpointClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.TempConverterEndpointPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TempConverterEndpointClient(EndpointConfiguration endpointConfiguration) : 
                base(TempConverterEndpointClient.GetBindingForEndpoint(endpointConfiguration), TempConverterEndpointClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TempConverterEndpointClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(TempConverterEndpointClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TempConverterEndpointClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(TempConverterEndpointClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TempConverterEndpointClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<TempoServico.CelsiusToFahrenheitResponse1> CelsiusToFahrenheitAsync(TempoServico.CelsiusToFahrenheit request)
        {
            return base.Channel.CelsiusToFahrenheitAsync(request);
        }
        
        public System.Threading.Tasks.Task<TempoServico.FahrenheitToCelsiusResponse1> FahrenheitToCelsiusAsync(TempoServico.FahrenheitToCelsius request)
        {
            return base.Channel.FahrenheitToCelsiusAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TempConverterEndpointPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TempConverterEndpointPort))
            {
                return new System.ServiceModel.EndpointAddress("http://www.learnwebservices.com/services/tempconverter");
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return TempConverterEndpointClient.GetBindingForEndpoint(EndpointConfiguration.TempConverterEndpointPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return TempConverterEndpointClient.GetEndpointAddress(EndpointConfiguration.TempConverterEndpointPort);
        }
        
        public enum EndpointConfiguration
        {
            
            TempConverterEndpointPort,
        }
    }
}
